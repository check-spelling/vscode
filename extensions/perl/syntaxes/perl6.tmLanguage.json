{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/perl.tmbundle/blob/master/Syntaxes/Perl%206.tmLanguage",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/textmate/perl.tmbundle/commit/d9841a0878239fa43f88c640f8d458590f97e8f5",
	"name": "Perl 6",
	"scopeName": "source.perl.6",
	"patterns": [
		{
			"begin": "^=begin",
			"end": "^=end",
			"name": "comment.block.perl"
		},
		{
			"begin": "(^[ \\t]+)?(?=#)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.perl"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.perl"
						}
					},
					"end": "\\n",
					"name": "comment.line.number-sign.perl"
				}
			]
		},
		{
			"captures": {
				"1": {
					"name": "storage.type.class.perl.6"
				},
				"3": {
					"name": "entity.name.type.class.perl.6"
				}
			},
			"match": "",
			"name": "meta.class.perl.6"
		},
		{
			"begin": "(?<=\\s)'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.perl"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.perl"
				}
			},
			"name": "string.quoted.single.perl",
			"patterns": [
				{
					"match": "",
					"name": "constant.character.escape.perl"
				}
			]
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.perl"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.perl"
				}
			},
			"name": "string.quoted.double.perl",
			"patterns": [
				{
					"match": "",
					"name": "constant.character.escape.perl"
				}
			]
		},
		{
			"begin": "q(q|to|heredoc)*\\s*:?(q|to|heredoc)*\\s*/(.+)/",
			"end": "\\3",
			"name": "string.quoted.single.heredoc.perl"
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*{{",
			"end": "}}",
			"name": "string.quoted.double.heredoc.brace.perl",
			"patterns": [
				{
					"include": "#qq_brace_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*\\(\\(",
			"end": "\\)\\)",
			"name": "string.quoted.double.heredoc.paren.perl",
			"patterns": [
				{
					"include": "#qq_paren_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*\\[\\[",
			"end": "\\]\\]",
			"name": "string.quoted.double.heredoc.bracket.perl",
			"patterns": [
				{
					"include": "#qq_bracket_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*{",
			"end": "}",
			"name": "string.quoted.single.heredoc.brace.perl",
			"patterns": [
				{
					"include": "#qq_brace_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*/",
			"end": "/",
			"name": "string.quoted.single.heredoc.slash.perl",
			"patterns": [
				{
					"include": "#qq_slash_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*\\(",
			"end": "\\)",
			"name": "string.quoted.single.heredoc.paren.perl",
			"patterns": [
				{
					"include": "#qq_paren_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*\\[",
			"end": "\\]",
			"name": "string.quoted.single.heredoc.bracket.perl",
			"patterns": [
				{
					"include": "#qq_bracket_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*'",
			"end": "'",
			"name": "string.quoted.single.heredoc.single.perl",
			"patterns": [
				{
					"include": "#qq_single_string_content"
				}
			]
		},
		{
			"begin": "(q|Q)(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*:?(x|exec|w|words|ww|quotewords|v|val|q|single|qq|double|s|scalar|a|array|h|hash|f|function|c|closure|b|blackslash|regexp|substr|trans|codes|p|path)*\\s*\"",
			"end": "\"",
			"name": "string.quoted.single.heredoc.double.perl",
			"patterns": [
				{
					"include": "#qq_double_string_content"
				}
			]
		},
		{
			"match": "",
			"name": "variable.other.perl"
		},
		{
			"match": "",
			"name": "storage.type.declare.routine.perl"
		},
		{
			"match": "",
			"name": "variable.language.perl"
		},
		{
			"match": "",
			"name": "keyword.other.include.perl"
		},
		{
			"match": "",
			"name": "keyword.control.conditional.perl"
		},
		{
			"match": "",
			"name": "storage.type.variable.perl"
		},
		{
			"match": "",
			"name": "keyword.control.repeat.perl"
		},
		{
			"match": "",
			"name": "keyword.control.flowcontrol.perl"
		},
		{
			"match": "",
			"name": "storage.modifier.type.constraints.perl"
		},
		{
			"match": "",
			"name": "meta.function.perl"
		},
		{
			"match": "",
			"name": "keyword.control.control-handlers.perl"
		},
		{
			"match": "",
			"name": "storage.modifier.perl"
		},
		{
			"match": "",
			"name": "constant.numeric.perl"
		},
		{
			"match": "",
			"name": "keyword.other.pragma.perl"
		},
		{
			"match": "",
			"name": "support.type.perl6"
		},
		{
			"match": "",
			"name": "keyword.operator.perl"
		},
		{
			"match": "",
			"name": "variable.other.identifier.perl.6"
		},
		{
			"match": "",
			"name": "support.function.perl"
		}
	],
	"repository": {
		"qq_brace_string_content": {
			"begin": "{",
			"end": "}",
			"patterns": [
				{
					"include": "#qq_brace_string_content"
				}
			]
		},
		"qq_bracket_string_content": {
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#qq_bracket_string_content"
				}
			]
		},
		"qq_double_string_content": {
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#qq_double_string_content"
				}
			]
		},
		"qq_paren_string_content": {
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{
					"include": "#qq_paren_string_content"
				}
			]
		},
		"qq_single_string_content": {
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"include": "#qq_single_string_content"
				}
			]
		},
		"qq_slash_string_content": {
			"begin": "\\\\/",
			"end": "\\\\/",
			"patterns": [
				{
					"include": "#qq_slash_string_content"
				}
			]
		}
	}
}