{
	"information_for_contributors": [
		"This file has been converted from https://github.com/Microsoft/vscode-mssql/blob/master/syntaxes/SQL.plist",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/Microsoft/vscode-mssql/commit/c8effddd6a9df117f3ed45b60b487163950a7ea5",
	"name": "SQL",
	"scopeName": "source.sql",
	"patterns": [
		{
			"match": "",
			"name": "text.variable"
		},
		{
			"match": "",
			"name": "text.bracketed"
		},
		{
			"match": "",
			"name": "keyword.other.sql"
		},
		{
			"include": "#comments"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.create.sql"
				},
				"2": {
					"name": "keyword.other.sql"
				},
				"5": {
					"name": "entity.name.function.sql"
				}
			},
			"match": "",
			"name": "meta.create.sql"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.create.sql"
				},
				"2": {
					"name": "keyword.other.sql"
				}
			},
			"match": "",
			"name": "meta.drop.sql"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.create.sql"
				},
				"2": {
					"name": "keyword.other.table.sql"
				},
				"3": {
					"name": "entity.name.function.sql"
				},
				"4": {
					"name": "keyword.other.cascade.sql"
				}
			},
			"match": "",
			"name": "meta.drop.sql"
		},
		{
			"captures": {
				"1": {
					"name": "keyword.other.create.sql"
				},
				"2": {
					"name": "keyword.other.table.sql"
				}
			},
			"match": "",
			"name": "meta.alter.sql"
		},
		{
			"captures": {
				"1": {
					"name": "storage.type.sql"
				},
				"2": {
					"name": "storage.type.sql"
				},
				"3": {
					"name": "constant.numeric.sql"
				},
				"4": {
					"name": "storage.type.sql"
				},
				"5": {
					"name": "constant.numeric.sql"
				},
				"6": {
					"name": "storage.type.sql"
				},
				"7": {
					"name": "constant.numeric.sql"
				},
				"8": {
					"name": "constant.numeric.sql"
				},
				"9": {
					"name": "storage.type.sql"
				},
				"10": {
					"name": "constant.numeric.sql"
				},
				"11": {
					"name": "storage.type.sql"
				},
				"12": {
					"name": "storage.type.sql"
				},
				"13": {
					"name": "storage.type.sql"
				},
				"14": {
					"name": "constant.numeric.sql"
				},
				"15": {
					"name": "storage.type.sql"
				}
			},
			"match": ""
		},
		{
			"match": "",
			"name": "storage.modifier.sql"
		},
		{
			"match": "",
			"name": "constant.numeric.sql"
		},
		{
			"match": "",
			"name": "keyword.other.DML.sql"
		},
		{
			"match": "",
			"name": "keyword.other.DDL.create.II.sql"
		},
		{
			"match": "",
			"name": "keyword.other.DML.II.sql"
		},
		{
			"match": "",
			"name": "keyword.other.LUW.sql"
		},
		{
			"match": "",
			"name": "keyword.other.authorization.sql"
		},
		{
			"match": "",
			"name": "keyword.other.data-integrity.sql"
		},
		{
			"match": "",
			"name": "keyword.other.object-comments.sql"
		},
		{
			"match": "",
			"name": "keyword.other.alias.sql"
		},
		{
			"match": "",
			"name": "keyword.other.order.sql"
		},
		{
			"match": "",
			"name": "keyword.operator.star.sql"
		},
		{
			"match": "",
			"name": "keyword.operator.comparison.sql"
		},
		{
			"match": "",
			"name": "keyword.operator.math.sql"
		},
		{
			"match": "",
			"name": "keyword.operator.concatenator.sql"
		},
		{
			"match": "",
			"name": "support.function.aggregate.sql"
		},
		{
			"match": "",
			"name": "support.function.conversion.sql"
		},
		{
			"match": "",
			"name": "support.function.cursor.sql"
		},
		{
			"match": "",
			"name": "support.function.datetime.sql"
		},
		{
			"match": "",
			"name": "support.function.expression.sql"
		},
		{
			"match": "",
			"name": "support.function.globalvar.sql"
		},
		{
			"match": "",
			"name": "support.function.logical.sql"
		},
		{
			"match": "",
			"name": "support.function.mathematical.sql"
		},
		{
			"match": "",
			"name": "support.function.metadata.sql"
		},
		{
			"match": "",
			"name": "support.function.ranking.sql"
		},
		{
			"match": "",
			"name": "support.function.rowset.sql"
		},
		{
			"match": "",
			"name": "support.function.security.sql"
		},
		{
			"match": "",
			"name": "support.function.string.sql"
		},
		{
			"match": "",
			"name": "support.function.system.sql"
		},
		{
			"match": "",
			"name": "support.function.textimage.sql"
		},
		{
			"captures": {
				"1": {
					"name": "constant.other.database-name.sql"
				},
				"2": {
					"name": "constant.other.table-name.sql"
				}
			},
			"match": ""
		},
		{
			"include": "#strings"
		},
		{
			"include": "#regexps"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.section.scope.begin.sql"
				},
				"2": {
					"name": "punctuation.section.scope.end.sql"
				}
			},
			"comment": "Allow for special â†© behavior",
			"match": "",
			"name": "meta.block.sql"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "(^[ \\t]+)?(?=--)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.sql"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "--",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.sql"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-dash.sql"
						}
					]
				},
				{
					"begin": "(^[ \\t]+)?(?=#)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.sql"
						}
					},
					"end": "(?!\\G)",
					"patterns": []
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.sql"
						}
					},
					"end": "\\*/",
					"name": "comment.block.c"
				}
			]
		},
		"regexps": {
			"patterns": [
				{
					"begin": "/(?=\\S.*/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"end": "/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.regexp.sql",
					"patterns": [
						{
							"include": "#string_interpolation"
						},
						{
							"match": "",
							"name": "constant.character.escape.slash.sql"
						}
					]
				},
				{
					"begin": "%r\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"comment": "We should probably handle nested bracket pairs!?! -- Allan",
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.regexp.modr.sql",
					"patterns": [
						{
							"include": "#string_interpolation"
						}
					]
				}
			]
		},
		"string_escape": {
			"match": "",
			"name": "constant.character.escape.sql"
		},
		"string_interpolation": {
			"captures": {
				"1": {
					"name": "punctuation.definition.string.begin.sql"
				},
				"3": {
					"name": "punctuation.definition.string.end.sql"
				}
			},
			"match": "",
			"name": "string.interpolated.sql"
		},
		"strings": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.string.begin.sql"
						},
						"2": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"comment": "this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.",
					"match": "",
					"name": "string.quoted.single.sql"
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.quoted.single.sql",
					"patterns": [
						{
							"include": "#string_escape"
						}
					]
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.string.begin.sql"
						},
						"2": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"comment": "this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.",
					"match": "",
					"name": "string.quoted.other.backtick.sql"
				},
				{
					"begin": "`",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"end": "`",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.quoted.other.backtick.sql",
					"patterns": [
						{
							"include": "#string_escape"
						}
					]
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.string.begin.sql"
						},
						"2": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"comment": "this is faster than the next begin/end rule since sub-pattern will match till end-of-line and SQL files tend to have very long lines.",
					"match": "",
					"name": "string.quoted.double.sql"
				},
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.quoted.double.sql",
					"patterns": [
						{
							"include": "#string_interpolation"
						}
					]
				},
				{
					"begin": "%\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.sql"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.sql"
						}
					},
					"name": "string.other.quoted.brackets.sql",
					"patterns": [
						{
							"include": "#string_interpolation"
						}
					]
				}
			]
		}
	}
}