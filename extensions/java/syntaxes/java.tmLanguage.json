{
	"information_for_contributors": [
		"This file has been converted from https://github.com/atom/language-java/blob/master/grammars/java.cson",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/atom/language-java/commit/bbbd3236c0ef9a9cd8c59d6ad4bd6b9b231dc714",
	"name": "Java",
	"scopeName": "source.java",
	"patterns": [
		{
			"begin": "\\b(package)\\b\\s*",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.package.java"
				}
			},
			"end": "\\s*(;)",
			"endCaptures": {
				"1": {
					"name": "punctuation.terminator.java"
				}
			},
			"name": "meta.package.java",
			"contentName": "storage.modifier.package.java",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "invalid.deprecated.package_name_not_lowercase.java"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.java"
				}
			]
		},
		{
			"begin": "\\b(import)\\b\\s*\\b(static)?\\b\\s",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.import.java"
				},
				"2": {
					"name": "storage.modifier.java"
				}
			},
			"end": "\\s*(;)",
			"endCaptures": {
				"1": {
					"name": "punctuation.terminator.java"
				}
			},
			"name": "meta.import.java",
			"contentName": "storage.modifier.import.java",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "invalid.illegal.character_not_allowed_here.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.java"
				},
				{
					"match": "",
					"name": "variable.language.wildcard.java"
				}
			]
		},
		{
			"include": "#comments-javadoc"
		},
		{
			"include": "#code"
		}
	],
	"repository": {
		"all-types": {
			"patterns": [
				{
					"include": "#primitive-arrays"
				},
				{
					"include": "#primitive-types"
				},
				{
					"include": "#object-types"
				}
			]
		},
		"annotations": {
			"patterns": [
				{
					"begin": "((@)[^\\s(]+)(\\()",
					"beginCaptures": {
						"1": {
							"name": "storage.type.annotation.java"
						},
						"2": {
							"name": "punctuation.definition.annotation.java"
						},
						"3": {
							"name": "punctuation.definition.annotation-arguments.begin.bracket.round.java"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.annotation-arguments.end.bracket.round.java"
						}
					},
					"name": "meta.declaration.annotation.java",
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "constant.other.key.java"
								},
								"2": {
									"name": "keyword.operator.assignment.java"
								}
							},
							"match": ""
						},
						{
							"include": "#code"
						}
					]
				},
				{
					"match": "",
					"name": "meta.declaration.annotation.java",
					"captures": {
						"1": {
							"name": "punctuation.definition.annotation.java"
						},
						"2": {
							"name": "storage.modifier.java"
						},
						"3": {
							"name": "storage.type.annotation.java"
						},
						"4": {
							"name": "storage.type.annotation.java"
						},
						"5": {
							"name": "punctuation.definition.annotation.java"
						}
					}
				}
			]
		},
		"anonymous-classes-and-new": {
			"begin": "\\bnew\\b",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.new.java"
				}
			},
			"end": "(?=;|\\)|,|:|}|\\+)",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#all-types"
				},
				{
					"begin": "(?<!\\])\\s*({)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.section.inner-class.begin.bracket.curly.java"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.inner-class.end.bracket.curly.java"
						}
					},
					"name": "meta.inner-class.java",
					"patterns": [
						{
							"include": "#class-body"
						}
					]
				},
				{
					"include": "#parens"
				}
			]
		},
		"assertions": {
			"patterns": [
				{
					"begin": "\\b(assert)\\s",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.assert.java"
						}
					},
					"end": "$",
					"name": "meta.declaration.assertion.java",
					"patterns": [
						{
							"match": "",
							"name": "keyword.operator.assert.expression-separator.java"
						},
						{
							"include": "#code"
						}
					]
				}
			]
		},
		"class": {
			"begin": "(?=\\w?[\\w\\s]*(?:class|(?<!@)interface|enum)\\s+\\w+)",
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.class.end.bracket.curly.java"
				}
			},
			"name": "meta.class.java",
			"patterns": [
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#generics"
				},
				{
					"include": "#comments"
				},
				{
					"captures": {
						"1": {
							"name": "storage.modifier.java"
						},
						"2": {
							"name": "entity.name.type.class.java"
						}
					},
					"match": "",
					"name": "meta.class.identifier.java"
				},
				{
					"begin": "extends",
					"beginCaptures": {
						"0": {
							"name": "storage.modifier.extends.java"
						}
					},
					"end": "(?={|implements)",
					"name": "meta.definition.class.inherited.classes.java",
					"patterns": [
						{
							"include": "#object-types-inherited"
						},
						{
							"include": "#comments"
						}
					]
				},
				{
					"begin": "(implements)\\s",
					"beginCaptures": {
						"1": {
							"name": "storage.modifier.implements.java"
						}
					},
					"end": "(?=\\s*extends|\\{)",
					"name": "meta.definition.class.implemented.interfaces.java",
					"patterns": [
						{
							"include": "#object-types-inherited"
						},
						{
							"include": "#comments"
						}
					]
				},
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.class.begin.bracket.curly.java"
						}
					},
					"end": "(?=})",
					"contentName": "meta.class.body.java",
					"patterns": [
						{
							"include": "#class-body"
						}
					]
				}
			]
		},
		"class-body": {
			"patterns": [
				{
					"include": "#comments-javadoc"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#class"
				},
				{
					"include": "#enums"
				},
				{
					"include": "#generics"
				},
				{
					"include": "#static-initializer"
				},
				{
					"include": "#methods"
				},
				{
					"include": "#annotations"
				},
				{
					"include": "#member-variables"
				},
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#code"
				}
			]
		},
		"anonymous-block-and-instance-initializer": {
			"begin": "{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.block.begin.bracket.curly.java"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.block.end.bracket.curly.java"
				}
			},
			"patterns": [
				{
					"include": "#code"
				}
			]
		},
		"static-initializer": {
			"patterns": [
				{
					"include": "#anonymous-block-and-instance-initializer"
				},
				{
					"match": "",
					"name": "storage.modifier.java"
				}
			]
		},
		"code": {
			"patterns": [
				{
					"include": "#annotations"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#enums"
				},
				{
					"include": "#class"
				},
				{
					"include": "#anonymous-block-and-instance-initializer"
				},
				{
					"include": "#try-catch-finally"
				},
				{
					"include": "#assertions"
				},
				{
					"include": "#parens"
				},
				{
					"include": "#constants-and-special-vars"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#anonymous-classes-and-new"
				},
				{
					"include": "#lambda-expression"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#method-call"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#objects"
				},
				{
					"include": "#properties"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#all-types"
				},
				{
					"match": "",
					"name": "punctuation.separator.delimiter.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.period.java"
				},
				{
					"match": "",
					"name": "punctuation.terminator.java"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"match": "",
					"name": "comment.block.empty.java"
				},
				{
					"include": "text.html.javadoc"
				},
				{
					"include": "#comments-inline"
				}
			]
		},
		"comments-inline": {
			"patterns": [
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"end": "\\*/",
					"name": "comment.block.java"
				},
				{
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.java"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.java"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-slash.java"
						}
					]
				}
			]
		},
		"comments-javadoc": {
			"patterns": [
				{
					"begin": "^\\s*/\\*\\*(?!/)",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"end": "\\*/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"name": "comment.block.javadoc.java",
					"patterns": [
						{
							"match": "",
							"name": "keyword.other.documentation.javadoc.java"
						},
						{
							"match": "",
							"captures": {
								"1": {
									"name": "keyword.other.documentation.javadoc.java"
								},
								"2": {
									"name": "variable.parameter.java"
								}
							}
						},
						{
							"match": "",
							"captures": {
								"1": {
									"name": "keyword.other.documentation.javadoc.java"
								},
								"2": {
									"name": "entity.name.type.class.java"
								}
							}
						},
						{
							"match": "",
							"captures": {
								"1": {
									"name": "keyword.other.documentation.javadoc.java"
								},
								"2": {
									"name": "entity.name.type.class.java"
								},
								"3": {
									"name": "variable.parameter.java"
								}
							}
						}
					]
				}
			]
		},
		"try-catch-finally": {
			"patterns": [
				{
					"begin": "\\btry\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.try.java"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.try.end.bracket.curly.java"
						}
					},
					"name": "meta.try.java",
					"patterns": [
						{
							"begin": "\\(",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.try.resources.begin.bracket.round.java"
								}
							},
							"end": "\\)",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.try.resources.end.bracket.round.java"
								}
							},
							"name": "meta.try.resources.java",
							"patterns": [
								{
									"include": "#code"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.try.begin.bracket.curly.java"
								}
							},
							"end": "(?=})",
							"contentName": "meta.try.body.java",
							"patterns": [
								{
									"include": "#code"
								}
							]
						}
					]
				},
				{
					"begin": "\\b(catch)\\b\\s*(?=\\(\\s*[^\\s]+\\s*[^)]+\\))",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.catch.java"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.catch.end.bracket.curly.java"
						}
					},
					"name": "meta.catch.java",
					"patterns": [
						{
							"begin": "\\(",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.parameters.begin.bracket.round.java"
								}
							},
							"end": "\\)",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.parameters.end.bracket.round.java"
								}
							},
							"contentName": "meta.catch.parameters.java",
							"patterns": [
								{
									"include": "#comments"
								},
								{
									"include": "#parameters"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.catch.begin.bracket.curly.java"
								}
							},
							"end": "(?=})",
							"contentName": "meta.catch.body.java",
							"patterns": [
								{
									"include": "#code"
								}
							]
						}
					]
				},
				{
					"begin": "\\bfinally\\b",
					"beginCaptures": {
						"0": {
							"name": "keyword.control.finally.java"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.finally.end.bracket.curly.java"
						}
					},
					"name": "meta.finally.java",
					"patterns": [
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.finally.begin.bracket.curly.java"
								}
							},
							"end": "(?=})",
							"contentName": "meta.finally.body.java",
							"patterns": [
								{
									"include": "#code"
								}
							]
						}
					]
				}
			]
		},
		"constants-and-special-vars": {
			"patterns": [
				{
					"match": "",
					"name": "constant.language.java"
				},
				{
					"match": "",
					"name": "variable.language.this.java"
				},
				{
					"match": "",
					"name": "variable.language.java"
				}
			]
		},
		"generics": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "punctuation.bracket.angle.java"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "punctuation.bracket.angle.java"
				}
			},
			"patterns": [
				{
					"match": "",
					"name": "storage.modifier.$1.java"
				},
				{
					"match": "",
					"captures": {
						"1": {
							"name": "storage.type.java"
						}
					}
				},
				{
					"include": "#primitive-arrays"
				},
				{
					"match": "",
					"name": "storage.type.generic.java"
				},
				{
					"match": "",
					"name": "storage.type.generic.wildcard.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.types.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.delimiter.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.period.java"
				},
				{
					"include": "#parens"
				},
				{
					"include": "#generics"
				},
				{
					"include": "#comments"
				}
			]
		},
		"enums": {
			"begin": "^\\s*(enum)\\s+(\\w+)",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.java"
				},
				"2": {
					"name": "entity.name.type.enum.java"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.enum.end.bracket.curly.java"
				}
			},
			"name": "meta.enum.java",
			"patterns": [
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.enum.begin.bracket.curly.java"
						}
					},
					"end": "(?=})",
					"patterns": [
						{
							"match": "",
							"name": "constant.other.enum.java"
						},
						{
							"include": "#class-body"
						}
					]
				},
				{
					"include": "#comments"
				}
			]
		},
		"function-call": {
			"begin": "([A-Za-z_$][\\w$]*)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.java"
				},
				"2": {
					"name": "punctuation.definition.parameters.begin.bracket.round.java"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.bracket.round.java"
				}
			},
			"name": "meta.function-call.java",
			"patterns": [
				{
					"include": "#code"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"match": "",
					"name": "keyword.control.throw.java"
				},
				{
					"match": "",
					"name": "keyword.control.ternary.java"
				},
				{
					"match": "",
					"name": "keyword.control.java"
				},
				{
					"match": "",
					"name": "keyword.operator.instanceof.java"
				},
				{
					"match": "",
					"name": "keyword.operator.bitwise.java"
				},
				{
					"match": "",
					"name": "keyword.operator.assignment.bitwise.java"
				},
				{
					"match": "",
					"name": "keyword.operator.comparison.java"
				},
				{
					"match": "",
					"name": "keyword.operator.assignment.arithmetic.java"
				},
				{
					"match": "",
					"name": "keyword.operator.assignment.java"
				},
				{
					"match": "",
					"name": "keyword.operator.increment-decrement.java"
				},
				{
					"match": "",
					"name": "keyword.operator.arithmetic.java"
				},
				{
					"match": "",
					"name": "keyword.operator.logical.java"
				},
				{
					"match": "",
					"name": "keyword.operator.bitwise.java"
				},
				{
					"match": "",
					"name": "keyword.reserved.java"
				}
			]
		},
		"lambda-expression": {
			"patterns": [
				{
					"match": "",
					"name": "storage.type.function.arrow.java"
				}
			]
		},
		"method-call": {
			"begin": "(\\.)\\s*([A-Za-z_$][\\w$]*)\\s*(\\()",
			"beginCaptures": {
				"1": {
					"name": "punctuation.separator.period.java"
				},
				"2": {
					"name": "entity.name.function.java"
				},
				"3": {
					"name": "punctuation.definition.parameters.begin.bracket.round.java"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.bracket.round.java"
				}
			},
			"name": "meta.method-call.java",
			"patterns": [
				{
					"include": "#code"
				}
			]
		},
		"methods": {
			"begin": "(?!new)(?=[\\w<].*\\s+)(?=([^=/]|/(?!/))+\\()",
			"end": "(})|(?=;)",
			"endCaptures": {
				"1": {
					"name": "punctuation.section.method.end.bracket.curly.java"
				}
			},
			"name": "meta.method.java",
			"patterns": [
				{
					"include": "#storage-modifiers"
				},
				{
					"begin": "(\\w+)\\s*(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.java"
						},
						"2": {
							"name": "punctuation.definition.parameters.begin.bracket.round.java"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.bracket.round.java"
						}
					},
					"name": "meta.method.identifier.java",
					"patterns": [
						{
							"include": "#parameters"
						},
						{
							"include": "#parens"
						},
						{
							"include": "#comments-inline"
						}
					]
				},
				{
					"include": "#generics"
				},
				{
					"begin": "(?=\\w.*\\s+\\w+\\s*\\()",
					"end": "(?=\\s+\\w+\\s*\\()",
					"name": "meta.method.return-type.java",
					"patterns": [
						{
							"include": "#all-types"
						},
						{
							"include": "#parens"
						}
					]
				},
				{
					"include": "#throws"
				},
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.method.begin.bracket.curly.java"
						}
					},
					"end": "(?=})",
					"contentName": "meta.method.body.java",
					"patterns": [
						{
							"include": "#code"
						}
					]
				},
				{
					"include": "#comments"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"match": "",
					"name": "constant.numeric.hex.java"
				},
				{
					"match": "",
					"name": "constant.numeric.binary.java"
				},
				{
					"match": "",
					"name": "constant.numeric.octal.java"
				},
				{
					"match": "",
					"name": "constant.numeric.decimal.java"
				}
			]
		},
		"object-types": {
			"patterns": [
				{
					"include": "#generics"
				},
				{
					"begin": "\\b(?:[A-Z]\\w*\\s*(\\.)\\s*)*([A-Z]\\w*)\\s*(?=\\[)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.separator.period.java"
						},
						"2": {
							"name": "storage.type.object.array.java"
						}
					},
					"end": "(?!\\s*\\[)",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#parens"
						}
					]
				},
				{
					"begin": "\\b((?:[A-Z]\\w*\\s*(\\.)\\s*)*[A-Z]\\w*)\\s*(?=<)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.java"
						},
						"2": {
							"name": "punctuation.separator.period.java"
						}
					},
					"end": "(?<=>)|(?!;)",
					"patterns": [
						{
							"include": "#generics"
						}
					]
				},
				{
					"match": "",
					"name": "storage.type.java",
					"captures": {
						"1": {
							"name": "punctuation.separator.period.java"
						}
					}
				}
			]
		},
		"object-types-inherited": {
			"patterns": [
				{
					"include": "#generics"
				},
				{
					"match": "",
					"name": "entity.other.inherited-class.java",
					"captures": {
						"1": {
							"name": "punctuation.separator.period.java"
						}
					}
				},
				{
					"match": "",
					"name": "punctuation.separator.delimiter.java"
				}
			]
		},
		"objects": {
			"match": "",
			"name": "variable.other.object.java"
		},
		"parameters": {
			"patterns": [
				{
					"match": "",
					"name": "storage.modifier.java"
				},
				{
					"include": "#annotations"
				},
				{
					"include": "#all-types"
				},
				{
					"include": "#strings"
				},
				{
					"match": "",
					"name": "variable.parameter.java"
				},
				{
					"match": "",
					"name": "punctuation.separator.delimiter.java"
				},
				{
					"match": "",
					"name": "punctuation.definition.parameters.varargs.java"
				}
			]
		},
		"parens": {
			"patterns": [
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.bracket.round.java"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.bracket.round.java"
						}
					},
					"patterns": [
						{
							"include": "#code"
						}
					]
				},
				{
					"begin": "\\[",
					"beginCaptures": {
						"0": {
							"name": "punctuation.bracket.square.java"
						}
					},
					"end": "\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.bracket.square.java"
						}
					},
					"patterns": [
						{
							"include": "#code"
						}
					]
				},
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.bracket.curly.java"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.bracket.curly.java"
						}
					},
					"patterns": [
						{
							"include": "#code"
						}
					]
				}
			]
		},
		"primitive-arrays": {
			"patterns": [
				{
					"begin": "\\b(void|boolean|byte|char|short|int|float|long|double)\\b\\s*(?=\\[)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.primitive.array.java"
						}
					},
					"end": "(?!\\s*\\[)",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#parens"
						}
					]
				}
			]
		},
		"primitive-types": {
			"match": "",
			"name": "storage.type.primitive.java"
		},
		"properties": {
			"patterns": [
				{
					"match": "",
					"captures": {
						"1": {
							"name": "punctuation.separator.period.java"
						},
						"2": {
							"name": "variable.other.object.property.java"
						}
					}
				},
				{
					"match": "",
					"captures": {
						"1": {
							"name": "punctuation.separator.period.java"
						},
						"2": {
							"name": "variable.other.property.java"
						}
					}
				},
				{
					"match": "",
					"captures": {
						"1": {
							"name": "punctuation.separator.period.java"
						},
						"2": {
							"name": "invalid.illegal.identifier.java"
						}
					}
				}
			]
		},
		"storage-modifiers": {
			"match": "",
			"name": "storage.modifier.java"
		},
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.java"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.java"
						}
					},
					"name": "string.quoted.double.java",
					"patterns": [
						{
							"match": "",
							"name": "constant.character.escape.java"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.java"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.java"
						}
					},
					"name": "string.quoted.single.java",
					"patterns": [
						{
							"match": "",
							"name": "constant.character.escape.java"
						}
					]
				}
			]
		},
		"throws": {
			"begin": "throws",
			"beginCaptures": {
				"0": {
					"name": "storage.modifier.java"
				}
			},
			"end": "(?={|;)",
			"name": "meta.throwables.java",
			"patterns": [
				{
					"include": "#object-types"
				}
			]
		},
		"variables": {
			"begin": "(?x)\n(?=\n  (\n    (void|boolean|byte|char|short|int|float|long|double)\n    |\n    (?>(\\w+\\.)*[A-Z]+\\w*) # e.g. `javax.ws.rs.Response`, or `String`\n  )\n  (\n    <[\\w<>,\\.?\\s]*> # e.g. `HashMap<Integer, String>`, or `List<java.lang.String>`\n  )?\n  (\n    (\\[\\])* # int[][]\n  )?\n  \\s+\n  [A-Za-z_$][\\w$]* # At least one identifier after space\n  ([\\w\\[\\],$][\\w\\[\\],\\s]*)? # possibly primitive array or additional identifiers\n  \\s*(=|;)\n)",
			"end": "(?=;)",
			"name": "meta.definition.variable.java",
			"patterns": [
				{
					"match": "",
					"captures": {
						"1": {
							"name": "variable.other.definition.java"
						}
					}
				},
				{
					"include": "#all-types"
				},
				{
					"begin": "=",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.assignment.java"
						}
					},
					"end": "(?=;)",
					"patterns": [
						{
							"include": "#code"
						}
					]
				},
				{
					"include": "#code"
				}
			]
		},
		"member-variables": {
			"begin": "(?=private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)",
			"end": "(?=;)",
			"patterns": [
				{
					"include": "#storage-modifiers"
				},
				{
					"include": "#variables"
				},
				{
					"include": "#primitive-arrays"
				},
				{
					"include": "#object-types"
				}
			]
		}
	}
}