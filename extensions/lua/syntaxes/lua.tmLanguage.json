{
	"information_for_contributors": [
		"This file has been converted from https://github.com/textmate/lua.tmbundle/blob/master/Syntaxes/Lua.plist",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/textmate/lua.tmbundle/commit/42da2c6ff5d86c068f72520f856190f413911a80",
	"name": "Lua",
	"scopeName": "source.lua",
	"comment": "Lua Syntax: version 0.8",
	"patterns": [
		{
			"begin": "\\b((local\\b)\\s+)?(function)\\s*(\\s+[a-zA-Z_][a-zA-Z0-9_]*(\\.[a-zA-Z_][a-zA-Z0-9_]*)*(:[a-zA-Z_][a-zA-Z0-9_]*)?\\s*)?(\\()",
			"beginCaptures": {
				"1": {
					"name": "storage.modifier.local.lua"
				},
				"3": {
					"name": "keyword.control.lua"
				},
				"4": {
					"name": "entity.name.function.lua"
				},
				"5": {
					"name": "punctuation.definition.parameters.begin.lua"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.parameters.end.lua"
				}
			},
			"name": "meta.function.lua",
			"patterns": [
				{
					"match": "",
					"name": "variable.parameter.function.lua"
				}
			]
		},
		{
			"match": "",
			"name": "constant.numeric.integer.hexadecimal.lua"
		},
		{
			"match": "",
			"name": "constant.numeric.float.hexadecimal.lua"
		},
		{
			"match": "",
			"name": "constant.numeric.integer.lua"
		},
		{
			"match": "",
			"name": "constant.numeric.float.lua"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lua"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lua"
				}
			},
			"name": "string.quoted.single.lua",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lua"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lua"
				}
			},
			"name": "string.quoted.double.lua",
			"patterns": [
				{
					"include": "#escaped_char"
				}
			]
		},
		{
			"begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
			"beginCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.lua"
				},
				"1": {
					"name": "punctuation.definition.string.begin.lua"
				}
			},
			"contentName": "meta.embedded.lua",
			"end": "(\\]\\2\\])",
			"endCaptures": {
				"0": {
					"name": "string.quoted.other.multiline.lua"
				},
				"1": {
					"name": "punctuation.definition.string.end.lua"
				}
			},
			"patterns": [
				{
					"include": "source.c"
				}
			]
		},
		{
			"begin": "(?<!--)\\[(=*)\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.lua"
				}
			},
			"end": "\\]\\1\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.lua"
				}
			},
			"name": "string.quoted.other.multiline.lua"
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.lua"
				}
			},
			"match": "",
			"name": "comment.line.shebang.lua"
		},
		{
			"begin": "(^[ \\t]+)?(?=--)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.lua"
				}
			},
			"end": "(?!\\G)((?!^)[ \\t]+\\n)?",
			"endCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.trailing.lua"
				}
			},
			"patterns": [
				{
					"begin": "--\\[(=*)\\[",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.begin.lua"
						}
					},
					"end": "\\]\\1\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.end.lua"
						}
					},
					"name": "comment.block.lua"
				},
				{
					"begin": "--",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.lua"
						}
					},
					"end": "\\n",
					"name": "comment.line.double-dash.lua"
				}
			]
		},
		{
			"captures": {
				"1": {
					"name": "keyword.control.goto.lua"
				},
				"2": {
					"name": "constant.other.placeholder.lua"
				}
			},
			"match": ""
		},
		{
			"captures": {
				"1": {
					"name": "punctuation.definition.label.begin.lua"
				},
				"2": {
					"name": "punctuation.definition.label.end.lua"
				}
			},
			"match": "",
			"name": "constant.other.placeholder.lua"
		},
		{
			"match": "",
			"name": "keyword.control.lua"
		},
		{
			"match": "",
			"name": "constant.language.lua"
		},
		{
			"match": "",
			"name": "variable.language.self.lua"
		},
		{
			"match": "",
			"name": "support.function.lua"
		},
		{
			"match": "",
			"name": "support.function.library.lua"
		},
		{
			"match": "",
			"name": "keyword.operator.lua"
		},
		{
			"match": "",
			"name": "support.function.any-method.lua"
		},
		{
			"match": "",
			"name": "variable.other.lua"
		},
		{
			"match": "",
			"name": "keyword.operator.lua"
		}
	],
	"repository": {
		"escaped_char": {
			"patterns": [
				{
					"match": "",
					"name": "constant.character.escape.lua"
				},
				{
					"match": "",
					"name": "constant.character.escape.byte.lua"
				},
				{
					"match": "",
					"name": "constant.character.escape.byte.lua"
				},
				{
					"match": "",
					"name": "constant.character.escape.unicode.lua"
				},
				{
					"match": "",
					"name": "invalid.illegal.character.escape.lua"
				}
			]
		}
	}
}