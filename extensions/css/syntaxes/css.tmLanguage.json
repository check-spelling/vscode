{
	"information_for_contributors": [
		"This file has been converted from https://github.com/atom/language-css/blob/master/grammars/css.cson",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/atom/language-css/commit/2bc1e294e2440ad91197263cd9f95dc4b00bab2f",
	"name": "CSS",
	"scopeName": "source.css",
	"patterns": [
		{
			"include": "#comment-block"
		},
		{
			"include": "#escapes"
		},
		{
			"include": "#combinators"
		},
		{
			"include": "#selector"
		},
		{
			"include": "#at-rules"
		},
		{
			"include": "#rule-list"
		}
	],
	"repository": {
		"at-rules": {
			"patterns": [
				{
					"begin": "\\A(?:\\xEF\\xBB\\xBF)?(?i:(?=\\s*@charset\\b))",
					"end": ";|(?=$)",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.rule.css"
						}
					},
					"name": "meta.at-rule.charset.css",
					"patterns": [
						{
							"captures": {
								"1": {
									"name": "invalid.illegal.not-lowercase.charset.css"
								},
								"2": {
									"name": "invalid.illegal.leading-whitespace.charset.css"
								},
								"3": {
									"name": "invalid.illegal.no-whitespace.charset.css"
								},
								"4": {
									"name": "invalid.illegal.whitespace.charset.css"
								},
								"5": {
									"name": "invalid.illegal.not-double-quoted.charset.css"
								},
								"6": {
									"name": "invalid.illegal.unclosed-string.charset.css"
								},
								"7": {
									"name": "invalid.illegal.unexpected-characters.charset.css"
								}
							},
							"match": ""
						},
						{
							"captures": {
								"1": {
									"name": "keyword.control.at-rule.charset.css"
								},
								"2": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"match": ""
						},
						{
							"begin": "\"",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.begin.css"
								}
							},
							"end": "\"|$",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.end.css"
								}
							},
							"name": "string.quoted.double.css",
							"patterns": [
								{
									"begin": "(?:\\G|^)(?=(?:[^\"])+$)",
									"end": "$",
									"name": "invalid.illegal.unclosed.string.css"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)((@)import)(?:\\s+|$|(?=['\"]|/\\*))",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.import.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.rule.css"
						}
					},
					"name": "meta.at-rule.import.css",
					"patterns": [
						{
							"begin": "\\G\\s*(?=/\\*)",
							"end": "(?<=\\*/)\\s*",
							"patterns": [
								{
									"include": "#comment-block"
								}
							]
						},
						{
							"include": "#string"
						},
						{
							"include": "#url"
						},
						{
							"include": "#media-query-list"
						}
					]
				},
				{
					"begin": "(?i)((@)font-face)(?=\\s*|{|/\\*|$)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.font-face.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": "(?!\\G)",
					"name": "meta.at-rule.font-face.css",
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#escapes"
						},
						{
							"include": "#rule-list"
						}
					]
				},
				{
					"begin": "(?i)(@)page(?=[\\s:{]|/\\*|$)",
					"captures": {
						"0": {
							"name": "keyword.control.at-rule.page.css"
						},
						"1": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": "(?=\\s*($|[:{;]))",
					"name": "meta.at-rule.page.css",
					"patterns": [
						{
							"include": "#rule-list"
						}
					]
				},
				{
					"begin": "(?i)(?=@media(\\s|\\(|/\\*|$))",
					"end": "(?<=})(?!\\G)",
					"patterns": [
						{
							"begin": "(?i)\\G(@)media",
							"beginCaptures": {
								"0": {
									"name": "keyword.control.at-rule.media.css"
								},
								"1": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"end": "(?=\\s*[{;])",
							"name": "meta.at-rule.media.header.css",
							"patterns": [
								{
									"include": "#media-query-list"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.media.begin.bracket.curly.css"
								}
							},
							"end": "}",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.media.end.bracket.curly.css"
								}
							},
							"name": "meta.at-rule.media.body.css",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)(?=@counter-style([\\s'\"{;]|/\\*|$))",
					"end": "(?<=})(?!\\G)",
					"patterns": [
						{
							"begin": "(?i)\\G(@)counter-style",
							"beginCaptures": {
								"0": {
									"name": "keyword.control.at-rule.counter-style.css"
								},
								"1": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"end": "(?=\\s*{)",
							"name": "meta.at-rule.counter-style.header.css",
							"patterns": [
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								},
								{
									"captures": {
										"0": {
											"patterns": [
												{
													"include": "#escapes"
												}
											]
										}
									},
									"match": "",
									"name": "variable.parameter.style-name.css"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.property-list.begin.bracket.curly.css"
								}
							},
							"end": "}",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.property-list.end.bracket.curly.css"
								}
							},
							"name": "meta.at-rule.counter-style.body.css",
							"patterns": [
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								},
								{
									"include": "#rule-list-innards"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)(?=@document([\\s'\"{;]|/\\*|$))",
					"end": "(?<=})(?!\\G)",
					"patterns": [
						{
							"begin": "(?i)\\G(@)document",
							"beginCaptures": {
								"0": {
									"name": "keyword.control.at-rule.document.css"
								},
								"1": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"end": "(?=\\s*[{;])",
							"name": "meta.at-rule.document.header.css",
							"patterns": [
								{
									"begin": "(?i)(?<![\\w-])(url-prefix|domain|regexp)(\\()",
									"beginCaptures": {
										"1": {
											"name": "support.function.document-rule.css"
										},
										"2": {
											"name": "punctuation.section.function.begin.bracket.round.css"
										}
									},
									"end": "\\)",
									"endCaptures": {
										"0": {
											"name": "punctuation.section.function.end.bracket.round.css"
										}
									},
									"name": "meta.function.document-rule.css",
									"patterns": [
										{
											"include": "#string"
										},
										{
											"include": "#comment-block"
										},
										{
											"include": "#escapes"
										},
										{
											"match": "",
											"name": "variable.parameter.document-rule.css"
										}
									]
								},
								{
									"include": "#url"
								},
								{
									"include": "#commas"
								},
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.document.begin.bracket.curly.css"
								}
							},
							"end": "}",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.document.end.bracket.curly.css"
								}
							},
							"name": "meta.at-rule.document.body.css",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)(?=@(?:-(?:webkit|moz|o|ms)-)?keyframes([\\s'\"{;]|/\\*|$))",
					"end": "(?<=})(?!\\G)",
					"patterns": [
						{
							"begin": "(?i)\\G(@)(?:-(?:webkit|moz|o|ms)-)?keyframes",
							"beginCaptures": {
								"0": {
									"name": "keyword.control.at-rule.keyframes.css"
								},
								"1": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"end": "(?=\\s*{)",
							"name": "meta.at-rule.keyframes.header.css",
							"patterns": [
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								},
								{
									"captures": {
										"0": {
											"patterns": [
												{
													"include": "#escapes"
												}
											]
										}
									},
									"match": "",
									"name": "variable.parameter.keyframe-list.css"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.keyframes.begin.bracket.curly.css"
								}
							},
							"end": "}",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.keyframes.end.bracket.curly.css"
								}
							},
							"name": "meta.at-rule.keyframes.body.css",
							"patterns": [
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								},
								{
									"captures": {
										"1": {
											"name": "entity.other.keyframe-offset.css"
										},
										"2": {
											"name": "entity.other.keyframe-offset.percentage.css"
										}
									},
									"match": ""
								},
								{
									"include": "#rule-list"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)(?=@supports(\\s|\\(|/\\*|$))",
					"end": "(?<=})(?!\\G)|(?=;)",
					"patterns": [
						{
							"begin": "(?i)\\G(@)supports",
							"beginCaptures": {
								"0": {
									"name": "keyword.control.at-rule.supports.css"
								},
								"1": {
									"name": "punctuation.definition.keyword.css"
								}
							},
							"end": "(?=\\s*[{;])",
							"name": "meta.at-rule.supports.header.css",
							"patterns": [
								{
									"include": "#feature-query-operators"
								},
								{
									"include": "#feature-query"
								},
								{
									"include": "#comment-block"
								},
								{
									"include": "#escapes"
								}
							]
						},
						{
							"begin": "{",
							"beginCaptures": {
								"0": {
									"name": "punctuation.section.supports.begin.bracket.curly.css"
								}
							},
							"end": "}",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.supports.end.bracket.curly.css"
								}
							},
							"name": "meta.at-rule.supports.body.css",
							"patterns": [
								{
									"include": "$self"
								}
							]
						}
					]
				},
				{
					"begin": "(?i)((@)viewport)(?=[\\s'\"{;]|/\\*|$)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.viewport.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": "(?=\\s*[@{;])",
					"name": "meta.at-rule.viewport.css",
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#escapes"
						}
					]
				},
				{
					"begin": "(?i)((@)font-feature-values)(?=[\\s'\"{;]|/\\*|$)\\s*",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.font-feature-values.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"contentName": "variable.parameter.font-name.css",
					"end": "(?=\\s*[@{;])",
					"name": "meta.at-rule.font-features.css",
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#escapes"
						}
					]
				},
				{
					"include": "#font-features"
				},
				{
					"begin": "(?i)((@)namespace)(?=[\\s'\";]|/\\*|$)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.namespace.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": ";|(?=[@{])",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.rule.css"
						}
					},
					"name": "meta.at-rule.namespace.css",
					"patterns": [
						{
							"include": "#url"
						},
						{
							"captures": {
								"1": {
									"patterns": [
										{
											"include": "#comment-block"
										}
									]
								},
								"2": {
									"name": "entity.name.function.namespace-prefix.css",
									"patterns": [
										{
											"include": "#escapes"
										}
									]
								}
							},
							"match": ""
						},
						{
							"include": "#comment-block"
						},
						{
							"include": "#escapes"
						},
						{
							"include": "#string"
						}
					]
				}
			]
		},
		"color-keywords": {
			"patterns": [
				{
					"match": "",
					"name": "support.constant.color.w3c-standard-color-name.css"
				},
				{
					"match": "",
					"name": "support.constant.color.w3c-extended-color-name.css"
				},
				{
					"match": "",
					"name": "support.constant.color.current.css"
				},
				{
					"match": "",
					"name": "invalid.deprecated.color.system.css"
				}
			]
		},
		"combinators": {
			"patterns": [
				{
					"match": "",
					"name": "invalid.deprecated.combinator.css"
				},
				{
					"match": "",
					"name": "keyword.operator.combinator.css"
				}
			]
		},
		"commas": {
			"match": "",
			"name": "punctuation.separator.list.comma.css"
		},
		"comment-block": {
			"begin": "/\\*",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.begin.css"
				}
			},
			"end": "\\*/",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.end.css"
				}
			},
			"name": "comment.block.css"
		},
		"escapes": {
			"patterns": [
				{
					"match": "",
					"name": "constant.character.escape.codepoint.css"
				},
				{
					"begin": "\\\\$\\s*",
					"end": "^(?<!\\G)",
					"name": "constant.character.escape.newline.css"
				},
				{
					"match": "",
					"name": "constant.character.escape.css"
				}
			]
		},
		"feature-query": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.condition.begin.bracket.round.css"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.condition.end.bracket.round.css"
				}
			},
			"name": "meta.feature-query.css",
			"patterns": [
				{
					"include": "#feature-query-operators"
				},
				{
					"include": "#feature-query"
				}
			]
		},
		"feature-query-operators": {
			"patterns": [
				{
					"match": "",
					"name": "keyword.operator.logical.feature.$1.css"
				},
				{
					"include": "#rule-list-innards"
				}
			]
		},
		"font-features": {
			"begin": "(?xi)\n((@)(annotation|character-variant|ornaments|styleset|stylistic|swash))\n(?=[\\s@'\"{;]|/\\*|$)",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.at-rule.${3:/downcase}.css"
				},
				"2": {
					"name": "punctuation.definition.keyword.css"
				}
			},
			"end": "(?<=})",
			"name": "meta.at-rule.${3:/downcase}.css",
			"patterns": [
				{
					"begin": "{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.property-list.begin.bracket.curly.css"
						}
					},
					"end": "}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.property-list.end.bracket.curly.css"
						}
					},
					"name": "meta.property-list.font-feature.css",
					"patterns": [
						{
							"captures": {
								"0": {
									"patterns": [
										{
											"include": "#escapes"
										}
									]
								}
							},
							"match": "",
							"name": "variable.font-feature.css"
						},
						{
							"include": "#rule-list-innards"
						}
					]
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"begin": "(?i)(?<![\\w-])(calc)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.calc.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.calc.css",
					"patterns": [
						{
							"match": "",
							"name": "keyword.operator.arithmetic.css"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?i)(?<![\\w-])(rgba?|hsla?)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.misc.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.color.css",
					"patterns": [
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?xi) (?<![\\w-])\n(\n  (?:-webkit-|-moz-|-o-)?    # Accept prefixed/historical variants\n  (?:repeating-)?            # \"Repeating\"-type gradient\n  (?:linear|radial|conic)    # Shape\n  -gradient\n)\n(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.gradient.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.gradient.css",
					"patterns": [
						{
							"match": "",
							"name": "keyword.operator.gradient.css"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?i)(?<![\\w-])(-webkit-gradient)(\\()",
					"beginCaptures": {
						"1": {
							"name": "invalid.deprecated.gradient.function.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.gradient.invalid.deprecated.gradient.css",
					"patterns": [
						{
							"begin": "(?i)(?<![\\w-])(from|to|color-stop)(\\()",
							"beginCaptures": {
								"1": {
									"name": "invalid.deprecated.function.css"
								},
								"2": {
									"name": "punctuation.section.function.begin.bracket.round.css"
								}
							},
							"end": "\\)",
							"endCaptures": {
								"0": {
									"name": "punctuation.section.function.end.bracket.round.css"
								}
							},
							"patterns": [
								{
									"include": "#property-values"
								}
							]
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?xi) (?<![\\w-])\n(annotation|attr|blur|brightness|character-variant|contrast|counters?\n|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate\n|image-set|invert|local|minmax|opacity|ornaments|repeat|saturate|sepia\n|styleset|stylistic|swash|symbols)\n(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.misc.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.misc.css",
					"patterns": [
						{
							"match": "",
							"name": "constant.numeric.other.density.css"
						},
						{
							"include": "#property-values"
						},
						{
							"match": "",
							"name": "variable.parameter.misc.css"
						}
					]
				},
				{
					"begin": "(?i)(?<![\\w-])(circle|ellipse|inset|polygon|rect)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.shape.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.shape.css",
					"patterns": [
						{
							"match": "",
							"name": "keyword.operator.shape.css"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?i)(?<![\\w-])(cubic-bezier|steps)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.timing-function.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.timing-function.css",
					"patterns": [
						{
							"match": "",
							"name": "support.constant.step-direction.css"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?xi) (?<![\\w-])\n( (?:translate|scale|rotate)(?:[XYZ]|3D)?\n| matrix(?:3D)?\n| skew[XY]?\n| perspective\n)\n(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.transform.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"include": "#property-values"
						}
					]
				},
				{
					"include": "#url"
				},
				{
					"begin": "(?i)(?<![\\w-])(var)(\\()",
					"beginCaptures": {
						"1": {
							"name": "support.function.misc.css"
						},
						"2": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"name": "meta.function.variable.css",
					"patterns": [
						{
							"name": "variable.argument.css",
							"match": ""
						},
						{
							"include": "#property-values"
						}
					]
				}
			]
		},
		"functional-pseudo-classes": {
			"patterns": [
				{
					"begin": "(?i)((:)dir)(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.other.attribute-name.pseudo-class.css"
						},
						"2": {
							"name": "punctuation.definition.entity.css"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#escapes"
						},
						{
							"match": "",
							"name": "support.constant.text-direction.css"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"begin": "(?i)((:)lang)(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.other.attribute-name.pseudo-class.css"
						},
						"2": {
							"name": "punctuation.definition.entity.css"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"match": "",
							"name": "support.constant.language-range.css"
						},
						{
							"begin": "\"",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.begin.css"
								}
							},
							"end": "\"",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.end.css"
								}
							},
							"name": "string.quoted.double.css",
							"patterns": [
								{
									"include": "#escapes"
								},
								{
									"match": "",
									"name": "support.constant.language-range.css"
								}
							]
						},
						{
							"begin": "'",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.string.begin.css"
								}
							},
							"end": "'",
							"endCaptures": {
								"0": {
									"name": "punctuation.definition.string.end.css"
								}
							},
							"name": "string.quoted.single.css",
							"patterns": [
								{
									"include": "#escapes"
								},
								{
									"match": "",
									"name": "support.constant.language-range.css"
								}
							]
						},
						{
							"include": "#commas"
						}
					]
				},
				{
					"begin": "(?i)((:)(?:not|has|matches))(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.other.attribute-name.pseudo-class.css"
						},
						"2": {
							"name": "punctuation.definition.entity.css"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"include": "#selector-innards"
						}
					]
				},
				{
					"begin": "(?i)((:)nth-(?:last-)?(?:child|of-type))(\\()",
					"beginCaptures": {
						"1": {
							"name": "entity.other.attribute-name.pseudo-class.css"
						},
						"2": {
							"name": "punctuation.definition.entity.css"
						},
						"3": {
							"name": "punctuation.section.function.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.function.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"match": "",
							"name": "constant.numeric.css"
						},
						{
							"match": "",
							"name": "support.constant.parity.css"
						}
					]
				}
			]
		},
		"media-features": {
			"captures": {
				"1": {
					"name": "support.type.property-name.media.css"
				},
				"2": {
					"name": "invalid.deprecated.media.css"
				},
				"3": {
					"name": "support.type.vendored.property-name.media.css"
				}
			},
			"match": ""
		},
		"media-feature-keywords": {
			"match": "",
			"name": "support.constant.property-value.css"
		},
		"media-query": {
			"begin": "\\G",
			"end": "(?=\\s*[{;])",
			"patterns": [
				{
					"include": "#comment-block"
				},
				{
					"include": "#escapes"
				},
				{
					"include": "#media-types"
				},
				{
					"match": "",
					"name": "keyword.operator.logical.$1.media.css"
				},
				{
					"match": "",
					"name": "keyword.operator.logical.and.media.css"
				},
				{
					"match": "",
					"name": "invalid.illegal.comma.css"
				},
				{
					"include": "#commas"
				},
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.begin.bracket.round.css"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameters.end.bracket.round.css"
						}
					},
					"patterns": [
						{
							"include": "#media-features"
						},
						{
							"include": "#media-feature-keywords"
						},
						{
							"match": "",
							"name": "punctuation.separator.key-value.css"
						},
						{
							"match": "",
							"name": "keyword.operator.comparison.css"
						},
						{
							"captures": {
								"1": {
									"name": "constant.numeric.css"
								},
								"2": {
									"name": "keyword.operator.arithmetic.css"
								},
								"3": {
									"name": "constant.numeric.css"
								}
							},
							"match": "",
							"name": "meta.ratio.css"
						},
						{
							"include": "#numeric-values"
						},
						{
							"include": "#comment-block"
						}
					]
				}
			]
		},
		"media-query-list": {
			"begin": "(?=\\s*[^{;])",
			"end": "(?=\\s*[{;])",
			"patterns": [
				{
					"include": "#media-query"
				}
			]
		},
		"media-types": {
			"captures": {
				"1": {
					"name": "support.constant.media.css"
				},
				"2": {
					"name": "invalid.deprecated.constant.media.css"
				}
			},
			"match": ""
		},
		"numeric-values": {
			"patterns": [
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.constant.css"
						}
					},
					"match": "",
					"name": "constant.other.color.rgb-value.hex.css"
				},
				{
					"captures": {
						"1": {
							"name": "keyword.other.unit.percentage.css"
						},
						"2": {
							"name": "keyword.other.unit.${2:/downcase}.css"
						}
					},
					"match": "",
					"name": "constant.numeric.css"
				}
			]
		},
		"property-keywords": {
			"patterns": [
				{
					"match": "",
					"name": "support.constant.property-value.css"
				},
				{
					"match": "",
					"name": "support.constant.property-value.list-style-type.css"
				},
				{
					"match": "",
					"name": "support.constant.vendored.property-value.css"
				},
				{
					"match": "",
					"name": "support.constant.font-name.css"
				}
			]
		},
		"property-names": {
			"patterns": [
				{
					"match": "",
					"name": "support.type.property-name.css"
				},
				{
					"match": "",
					"name": "support.type.vendored.property-name.css"
				}
			]
		},
		"property-values": {
			"patterns": [
				{
					"include": "#commas"
				},
				{
					"include": "#comment-block"
				},
				{
					"include": "#escapes"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#property-keywords"
				},
				{
					"include": "#unicode-range"
				},
				{
					"include": "#numeric-values"
				},
				{
					"include": "#color-keywords"
				},
				{
					"include": "#string"
				},
				{
					"match": "",
					"name": "keyword.other.important.css"
				}
			]
		},
		"pseudo-classes": {
			"captures": {
				"1": {
					"name": "punctuation.definition.entity.css"
				},
				"2": {
					"name": "invalid.illegal.colon.css"
				}
			},
			"match": "",
			"name": "entity.other.attribute-name.pseudo-class.css"
		},
		"pseudo-elements": {
			"captures": {
				"1": {
					"name": "punctuation.definition.entity.css"
				},
				"2": {
					"name": "punctuation.definition.entity.css"
				}
			},
			"match": "",
			"name": "entity.other.attribute-name.pseudo-element.css"
		},
		"rule-list": {
			"begin": "{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.property-list.begin.bracket.curly.css"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.property-list.end.bracket.curly.css"
				}
			},
			"name": "meta.property-list.css",
			"patterns": [
				{
					"include": "#rule-list-innards"
				}
			]
		},
		"rule-list-innards": {
			"patterns": [
				{
					"include": "#comment-block"
				},
				{
					"include": "#escapes"
				},
				{
					"include": "#font-features"
				},
				{
					"match": "",
					"name": "variable.css"
				},
				{
					"begin": "(?<![-a-zA-Z])(?=[-a-zA-Z])",
					"end": "$|(?![-a-zA-Z])",
					"name": "meta.property-name.css",
					"patterns": [
						{
							"include": "#property-names"
						}
					]
				},
				{
					"begin": "(:)\\s*",
					"beginCaptures": {
						"1": {
							"name": "punctuation.separator.key-value.css"
						}
					},
					"end": "\\s*(;)|\\s*(?=}|\\))",
					"endCaptures": {
						"1": {
							"name": "punctuation.terminator.rule.css"
						}
					},
					"contentName": "meta.property-value.css",
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#property-values"
						}
					]
				},
				{
					"match": "",
					"name": "punctuation.terminator.rule.css"
				}
			]
		},
		"selector": {
			"begin": "(?x)\n(?=\n  (?:\\|)?                    # Possible anonymous namespace prefix\n  (?:\n    [-\\[:.*\\#a-zA-Z_]       # Valid selector character\n    |\n    [^\\x00-\\x7F]            # Which can include non-ASCII symbols\n    |\n    \\\\                      # Or an escape sequence\n    (?:[0-9a-fA-F]{1,6}|.)\n  )\n)",
			"end": "(?=\\s*[/@{)])",
			"name": "meta.selector.css",
			"patterns": [
				{
					"include": "#selector-innards"
				}
			]
		},
		"selector-innards": {
			"patterns": [
				{
					"include": "#comment-block"
				},
				{
					"include": "#commas"
				},
				{
					"include": "#escapes"
				},
				{
					"include": "#combinators"
				},
				{
					"captures": {
						"1": {
							"name": "entity.other.namespace-prefix.css"
						},
						"2": {
							"name": "punctuation.separator.css"
						}
					},
					"match": ""
				},
				{
					"include": "#tag-names"
				},
				{
					"match": "",
					"name": "entity.name.tag.wildcard.css"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.css"
						},
						"2": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"match": "",
					"name": "invalid.illegal.bad-identifier.css"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.css"
						},
						"2": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"match": "",
					"name": "entity.other.attribute-name.class.css"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.css"
						},
						"2": {
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						}
					},
					"match": "",
					"name": "entity.other.attribute-name.id.css"
				},
				{
					"begin": "\\[",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.entity.begin.bracket.square.css"
						}
					},
					"end": "\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.entity.end.bracket.square.css"
						}
					},
					"name": "meta.attribute-selector.css",
					"patterns": [
						{
							"include": "#comment-block"
						},
						{
							"include": "#string"
						},
						{
							"captures": {
								"1": {
									"name": "storage.modifier.ignore-case.css"
								}
							},
							"match": ""
						},
						{
							"captures": {
								"1": {
									"name": "string.unquoted.attribute-value.css",
									"patterns": [
										{
											"include": "#escapes"
										}
									]
								}
							},
							"match": ""
						},
						{
							"include": "#escapes"
						},
						{
							"match": "",
							"name": "keyword.operator.pattern.css"
						},
						{
							"match": "",
							"name": "punctuation.separator.css"
						},
						{
							"captures": {
								"1": {
									"name": "entity.other.namespace-prefix.css",
									"patterns": [
										{
											"include": "#escapes"
										}
									]
								}
							},
							"match": ""
						},
						{
							"captures": {
								"1": {
									"name": "entity.other.attribute-name.css",
									"patterns": [
										{
											"include": "#escapes"
										}
									]
								}
							},
							"match": ""
						}
					]
				},
				{
					"include": "#pseudo-classes"
				},
				{
					"include": "#pseudo-elements"
				},
				{
					"include": "#functional-pseudo-classes"
				},
				{
					"match": "",
					"name": "entity.name.tag.custom.css"
				}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.css"
						}
					},
					"end": "\"|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.css"
						}
					},
					"name": "string.quoted.double.css",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\\"]|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.unclosed.string.css",
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						},
						{
							"include": "#escapes"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.css"
						}
					},
					"end": "'|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.css"
						}
					},
					"name": "string.quoted.single.css",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\']|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.unclosed.string.css",
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						},
						{
							"include": "#escapes"
						}
					]
				}
			]
		},
		"tag-names": {
			"match": "",
			"name": "entity.name.tag.css"
		},
		"unicode-range": {
			"captures": {
				"0": {
					"name": "constant.other.unicode-range.css"
				},
				"1": {
					"name": "punctuation.separator.dash.unicode-range.css"
				}
			},
			"match": ""
		},
		"url": {
			"begin": "(?i)(?<![\\w@-])(url)(\\()",
			"beginCaptures": {
				"1": {
					"name": "support.function.url.css"
				},
				"2": {
					"name": "punctuation.section.function.begin.bracket.round.css"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.function.end.bracket.round.css"
				}
			},
			"name": "meta.function.url.css",
			"patterns": [
				{
					"match": "",
					"name": "variable.parameter.url.css"
				},
				{
					"include": "#string"
				},
				{
					"include": "#comment-block"
				},
				{
					"include": "#escapes"
				}
			]
		}
	}
}